{
    "ActionScript": [
        {"q": "Como você declara uma variável em ActionScript?", "options": ["var x = 10;", "x = 10;", "let x = 10;", "int x = 10;"], "a": "var x = 10;"},
        {"q": "Qual palavra-chave você usa para declarar uma função em ActionScript?", "options": ["function", "def", "func", "proc"], "a": "function"},
        {"q": "Como você cria um objeto em ActionScript?", "options": ["var obj = new Object();", "var obj = {}; ", "var obj = ();", "var obj = [];" ], "a": "var obj = new Object();"},
        {"q": "Qual operador você usa para comparação em ActionScript?", "options": ["=", "==", "===", "==="], "a": "=="},
        {"q": "Como você executa um loop em ActionScript?", "options": ["for", "foreach", "while", "loop"], "a": "for"},
        {"q": "Como você verifica o tipo de uma variável em ActionScript?", "options": ["typeof var", "getType(var)", "typeof(var)", "var.type()"], "a": "typeof(var)"},
        {"q": "Como você cria um array em ActionScript?", "options": ["var arr = [];", "var arr = new Array();", "array = {}; ", "arr = (1, 2, 3);"], "a": "var arr = new Array();"},
        {"q": "Como você define uma constante em ActionScript?", "options": ["const PI = 3.14;", "constant PI = 3.14;", "var PI = 3.14;", "const(PI = 3.14);"], "a": "const PI = 3.14;"},
        {"q": "Como você adiciona um item ao final de um array em ActionScript?", "options": ["array.push()", "array.add()", "array.append()", "array.insert()"], "a": "array.push()"},
        {"q": "Como você cria uma função anônima em ActionScript?", "options": ["function() {}", "() => {}", "function(){ }", "var func = function() {}"], "a": "var func = function() {}"},
        {"q": "Como você chama uma função em ActionScript?", "options": ["myFunction()", "function myFunction();", "call myFunction()", "invoke(myFunction)"], "a": "myFunction()"},
        {"q": "Qual comando é usado para imprimir no console em ActionScript?", "options": ["console.log()", "trace()", "print()", "echo()"], "a": "trace()"},
        {"q": "Como você trata exceções em ActionScript?", "options": ["try-catch", "catch-finally", "throw-catch", "error()"], "a": "try-catch"},
        {"q": "Como você acessa um valor de um objeto em ActionScript?", "options": ["obj.property", "obj['property']", "obj.getProperty('property')", "obj:property"], "a": "obj.property"},
        {"q": "Qual método você usa para remover um item de um array em ActionScript?", "options": ["array.remove()", "array.delete()", "array.pop()", "array.splice()"], "a": "array.splice()"},
        {"q": "Como você cria uma classe em ActionScript?", "options": ["class MyClass {}", "function MyClass {}", "var MyClass = class {}", "class = MyClass()"], "a": "class MyClass {}"},
        {"q": "Como você cria um evento em ActionScript?", "options": ["var evt = new Event();", "event(evt)", "evt = new EventListener();", "addEventListener(evt);"], "a": "var evt = new Event();"},
        {"q": "Como você acessa o valor de um input text em ActionScript?", "options": ["input.text", "input.value", "input.getText()", "input.textContent"], "a": "input.text"},
        {"q": "Como você define o escopo de uma variável?", "options": ["var", "global", "local", "this"], "a": "var"},
        {"q": "Como você faz uma requisição HTTP em ActionScript?", "options": ["HTTP.request()", "XMLHttpRequest()", "HttpService()", "URLRequest()"], "a": "URLRequest()"},
        {"q": "Como você carrega um arquivo em ActionScript?", "options": ["loadFile()", "loader.load()", "url.load()", "loadURL()"], "a": "loader.load()"},
        {"q": "Qual é a principal estrutura de controle condicional?", "options": ["if-else", "when", "switch", "check"], "a": "if-else"},
        {"q": "Como você define um objeto anônimo em ActionScript?", "options": ["var obj = { name: 'test' };", "var obj = new Object();", "obj = createObject();", "var obj = {}"], "a": "var obj = { name: 'test' };"},
        {"q": "Como você cria uma função de callback?", "options": ["function callback() {}", "setCallback(callback);", "myFunction(callback)", "callback();"], "a": "myFunction(callback)"},
        {"q": "Como você escuta um evento de clique em ActionScript?", "options": ["element.addEventListener('click', func);", "click(element, func);", "element.click(func);", "addEvent('click', func);"], "a": "element.addEventListener('click', func);"},
        {"q": "Como você cria um loop infinito em ActionScript?", "options": ["while(true) {}", "for(;;) {}", "loop {}", "while(1) {}"], "a": "while(true) {}"},
        {"q": "Como você verifica a existência de uma propriedade em um objeto?", "options": ["'property' in object", "object.has('property')", "object.hasOwnProperty('property')", "object.property.exists()"], "a": "'property' in object"},
        {"q": "Como você manipula um timer em ActionScript?", "options": ["setTimeout()", "setInterval()", "timer.schedule()", "setTime()"], "a": "setInterval()"},
        {"q": "Qual é o operador de atribuição em ActionScript?", "options": ["=", ":=", "==", "<-"], "a": "="},
        {"q": "Como você define uma variável de tipo String?", "options": ["var x: String", "var x = 'text'", "var x: string", "var x = text"], "a": "var x: String"},
        {"q": "Como você converte um número para String?", "options": ["String(value)", "convert(value)", "value.toString()", "string(value)"], "a": "value.toString()"},
        {"q": "Qual é o método usado para substituir um valor em uma String?", "options": ["replace()", "substitute()", "replaceAll()", "replaceText()"], "a": "replace()"},
        {"q": "Como você verifica se uma variável é uma instância de uma classe?", "options": ["isInstanceOf()", "instanceof", "typeof()", "is()"], "a": "isInstanceOf()"}
    ],
    "CSS": [
        {"q": "O que significa CSS?", "options": ["Cascading Style Sheets", "Color Style Sheets", "Creative Styling Sheets", "Cascading Style Systems"], "a": "Cascading Style Sheets"},
        {"q": "Qual é a principal função do CSS?", "options": ["Estilizar a aparência de uma página web", "Estruturar o conteúdo de uma página", "Interagir com o banco de dados", "Criar animações"], "a": "Estilizar a aparência de uma página web"},
        {"q": "O que é um seletor em CSS?", "options": ["Um elemento que define a regra de estilo", "Um tipo de propriedade", "Uma ferramenta de validação", "Uma estrutura de layout"], "a": "Um elemento que define a regra de estilo"},
        {"q": "Como você aplica uma cor de fundo em um elemento HTML usando CSS?", "options": ["background-color: #ff0000;", "color: #ff0000;", "background: #ff0000;", "font-color: #ff0000;"], "a": "background-color: #ff0000;"},
        {"q": "Qual é a unidade padrão para medidas em CSS?", "options": ["px", "em", "%", "rem"], "a": "px"},
        {"q": "O que é uma classe no CSS?", "options": ["Um seletor que aplica estilos a múltiplos elementos", "Um tipo de elemento HTML", "Um arquivo de estilo", "Um tipo de propriedade de CSS"], "a": "Um seletor que aplica estilos a múltiplos elementos"},
        {"q": "Qual é a propriedade para mudar o tipo de fonte em CSS?", "options": ["font-family", "font-style", "text-align", "font-size"], "a": "font-family"},
        {"q": "Como você faz o texto ficar em negrito em CSS?", "options": ["font-weight: bold;", "font-style: bold;", "text-style: bold;", "font: bold;"], "a": "font-weight: bold;"},
        {"q": "O que a propriedade 'display' faz em CSS?", "options": ["Controla como o elemento será exibido", "Define a altura do elemento", "Modifica o alinhamento do texto", "Define a cor de fundo do elemento"], "a": "Controla como o elemento será exibido"},
        {"q": "O que é o 'box-model' em CSS?", "options": ["Modelo de layout que descreve a estrutura de cada elemento", "Um modelo de estrutura de arquivos", "Modelo de cores", "Modelo de fontes"], "a": "Modelo de layout que descreve a estrutura de cada elemento"},
        {"q": "Qual a diferença entre 'padding' e 'margin' em CSS?", "options": ["Padding é o espaço interno, margin é o espaço externo", "Ambos são a mesma coisa", "Padding é para fontes, margin é para imagens", "Padding é um tipo de borda, margin é uma cor de fundo"], "a": "Padding é o espaço interno, margin é o espaço externo"},
        {"q": "Como você define um tamanho fixo de fonte em CSS?", "options": ["font-size: 16px;", "font: 16px;", "size: 16px;", "text-size: 16px;"], "a": "font-size: 16px;"},
        {"q": "Como você faz um elemento se alinhar ao centro da página em CSS?", "options": ["margin: 0 auto;", "text-align: center;", "align: center;", "position: center;"], "a": "margin: 0 auto;"},
        {"q": "Qual a diferença entre 'absolute' e 'relative' no posicionamento CSS?", "options": ["'Absolute' posiciona em relação ao elemento pai, 'relative' em relação ao elemento original", "'Absolute' é para centralizar, 'relative' é para ajustar", "'Absolute' é mais rápido que 'relative'", "'Relative' não afeta o layout, 'absolute' sim"], "a": "'Absolute' posiciona em relação ao elemento pai, 'relative' em relação ao elemento original"},
        {"q": "O que faz a propriedade 'float' em CSS?", "options": ["Faz o elemento flutuar para a esquerda ou direita", "Define a posição do elemento", "Muda a cor de fundo", "Define a borda do elemento"], "a": "Faz o elemento flutuar para a esquerda ou direita"},
        {"q": "O que é um 'pseudo-elemento' em CSS?", "options": ["Uma maneira de estilizar partes de um elemento", "Um tipo de elemento HTML", "Uma classe", "Uma tag de estilo"], "a": "Uma maneira de estilizar partes de um elemento"},
        {"q": "Como você altera o estilo de um link quando ele é clicado em CSS?", "options": ["a:active", "a:focus", "a:hover", "a:visited"], "a": "a:active"},
        {"q": "O que significa 'em' em CSS?", "options": ["Uma unidade relativa ao tamanho da fonte do elemento pai", "Uma unidade fixa", "Uma unidade baseada no tamanho da tela", "Uma unidade para cores"], "a": "Uma unidade relativa ao tamanho da fonte do elemento pai"},
        {"q": "Qual a propriedade para mudar a opacidade de um elemento em CSS?", "options": ["opacity", "transparency", "visibility", "filter"], "a": "opacity"},
        {"q": "O que a propriedade 'z-index' faz em CSS?", "options": ["Controla a sobreposição de elementos", "Define a opacidade", "Altera a posição", "Altera o layout de página"], "a": "Controla a sobreposição de elementos"},
        {"q": "Qual é o seletor de classe em CSS?", "options": [".nome-classe", "#nome-classe", "nome-classe", "nome-classe()"], "a": ".nome-classe"},
        {"q": "O que significa a unidade 'rem' em CSS?", "options": ["Uma unidade relativa ao tamanho da fonte do elemento raiz", "Uma unidade fixa", "Uma unidade relativa ao tamanho da tela", "Uma unidade de altura de linha"], "a": "Uma unidade relativa ao tamanho da fonte do elemento raiz"},
        {"q": "Como você aplica uma borda em CSS?", "options": ["border: 1px solid black;", "borders: 1px solid black;", "border-color: black;", "outline: 1px solid black;"], "a": "border: 1px solid black;"},
        {"q": "Como você cria uma animação em CSS?", "options": ["@keyframes", "@animate", "@motion", "@transition"], "a": "@keyframes"},
        {"q": "O que a propriedade 'transition' faz em CSS?", "options": ["Define o tempo de transição entre os estados", "Altera a posição de um elemento", "Modifica o tamanho do elemento", "Aplica um efeito de rotação"], "a": "Define o tempo de transição entre os estados"},
        {"q": "O que significa 'display: flex' em CSS?", "options": ["Define um layout flexível", "Alinha o texto", "Controla a largura do elemento", "Controla a altura do elemento"], "a": "Define um layout flexível"},
        {"q": "Qual a diferença entre 'inline' e 'block' no 'display' em CSS?", "options": ["Inline não quebra a linha, block quebra a linha", "Inline é usado para links, block para textos", "Inline é usado para listas, block para imagens", "Ambos são usados de forma intercambiável"], "a": "Inline não quebra a linha, block quebra a linha"},
        {"q": "O que significa a propriedade 'visibility' em CSS?", "options": ["Controla a visibilidade do elemento", "Define o tipo de fonte", "Muda o alinhamento", "Aplica sombra no elemento"], "a": "Controla a visibilidade do elemento"},
        {"q": "Como você altera o tamanho de uma imagem em CSS?", "options": ["width: 100px;", "image-size: 100px;", "resize: 100px;", "image-width: 100px;"], "a": "width: 100px;"},
        {"q": "Qual a função do seletor ':hover' em CSS?", "options": ["Aplica um estilo quando o elemento é clicado", "Aplica um estilo quando o mouse passa sobre o elemento", "Aplica um estilo quando o elemento é visitado", "Aplica um estilo quando o foco é no elemento"], "a": "Aplica um estilo quando o mouse passa sobre o elemento"},
        {"q": "O que é um 'media query' em CSS?", "options": ["Um recurso para aplicar estilos com base em características da tela", "Uma classe de estilo", "Uma propriedade de layout", "Uma função de cor"], "a": "Um recurso para aplicar estilos com base em características da tela"},
        {"q": "Como você cria uma lista com marcadores em CSS?", "options": ["list-style-type: disc;", "marker-type: disc;", "list-marker: disc;", "list-type: disc;"], "a": "list-style-type: disc;"}
    ],
    "C#": [
        {"q": "Como você declara uma variável em C#?", "options": ["int x = 10;", "var x = 10;", "let x = 10;", "x = 10;"], "a": "int x = 10;"},
        {"q": "Qual palavra-chave é usada para definir uma classe em C#?", "options": ["class", "def", "function", "struct"], "a": "class"},
        {"q": "Como você cria um objeto em C#?", "options": ["var obj = new Object();", "var obj = new MyClass();", "obj = new MyClass();", "Object obj = new MyClass();"], "a": "var obj = new MyClass();"},
        {"q": "Qual método é usado para imprimir no console em C#?", "options": ["System.out.println()", "echo()", "Console.log()", "Console.WriteLine()"], "a": "Console.WriteLine()"},
        {"q": "Como você cria um loop 'for' em C#?", "options": ["for (int i = 0; i < 10; i++) {}", "for (int i: 0; i < 10; i++) {}", "for(int i = 0; i < 10; i++) {}", "for i = 0 to 10 {}"], "a": "for (int i = 0; i < 10; i++) {}"},
        {"q": "Qual operador é usado para comparação em C#?", "options": ["==", "=", "===", "!="], "a": "=="},
        {"q": "Como você define uma constante em C#?", "options": ["const int PI = 3;", "final int PI = 3;", "constant int PI = 3;", "let PI = 3;"], "a": "const int PI = 3;"},
        {"q": "Como você cria um array em C#?", "options": ["int[] arr = {1, 2, 3};", "int arr[] = new int[3];", "int arr[] = {1, 2, 3};", "arr = new int[] {1, 2, 3};"], "a": "int[] arr = {1, 2, 3};"},
        {"q": "Como você declara uma função em C#?", "options": ["function myFunction() {}", "void myFunction() {}", "def myFunction() {}", "public function myFunction() {}"], "a": "void myFunction() {}"},
        {"q": "Qual é a palavra-chave para declarar um método assíncrono em C#?", "options": ["async", "await", "asynchronous", "promise"], "a": "async"},
        {"q": "Como você manipula exceções em C#?", "options": ["try-catch", "try-finally", "catch-throw", "error-catch"], "a": "try-catch"},
        {"q": "Como você verifica se um objeto é nulo em C#?", "options": ["if (obj == null)", "if (null == obj)", "if (isNull(obj))", "if (obj.Equals(null))"], "a": "if (obj == null)"},
        {"q": "Como você chama um método em C#?", "options": ["myMethod();", "call myMethod();", "invoke myMethod();", "myMethod.invoke();"], "a": "myMethod();"},
        {"q": "Como você define o tipo de um parâmetro de método em C#?", "options": ["void method(int x) {}", "method(int x) {}", "int method(x) {}", "method(x: int) {}"], "a": "void method(int x) {}"},
        {"q": "Como você cria uma interface em C#?", "options": ["interface IMyInterface {}", "public interface IMyInterface {}", "interface MyInterface()", "class IMyInterface {}"], "a": "public interface IMyInterface {}"},
        {"q": "Como você chama um método assíncrono em C#?", "options": ["myAsyncMethod();", "await myAsyncMethod();", "async myAsyncMethod();", "call myAsyncMethod();"], "a": "await myAsyncMethod();"},
        {"q": "Como você define um tipo genérico em C#?", "options": ["class MyClass<T> {}", "class MyClass[] {}", "class MyClass<T>[] {}", "MyClass<T> class {};"], "a": "class MyClass<T> {}"},
        {"q": "Como você faz um cast de tipo em C#?", "options": ["(int) myObject;", "cast(myObject);", "myObject as int;", "myObject.to(int);"], "a": "(int) myObject;"},
        {"q": "Como você usa LINQ em C#?", "options": ["from x in myList select x", "select from x in myList", "myList.select()", "myList.map()"], "a": "from x in myList select x"},
        {"q": "Como você define um evento em C#?", "options": ["event EventHandler myEvent;", "public event EventHandler myEvent;", "event EventHandler();", "public event void myEvent;"], "a": "public event EventHandler myEvent;"},
        {"q": "Como você define uma classe base em C#?", "options": ["class MyBaseClass {}", "class BaseClass {}", "class Base{} : MyBaseClass", "public class MyBaseClass : object"], "a": "class MyBaseClass {}"},
        {"q": "Como você cria uma exceção personalizada em C#?", "options": ["public class MyException : Exception {}", "class MyException extends Exception {}", "throw new MyException();", "customException();"], "a": "public class MyException : Exception {}"},
        {"q": "Como você pode garantir que um valor não será nulo em C#?", "options": ["null-coalescing operator (??)", "null-checking operator (??)", "null-safe operator (&&)", "isNull operator"], "a": "null-coalescing operator (??)"},
        {"q": "Qual método você usa para criar uma string a partir de uma matriz de caracteres?", "options": ["new String(chars);", "String(chars);", "chars.toString();", "String.Concat(chars);"], "a": "new String(chars);"},
        {"q": "Como você define uma variável de tipo String em C#?", "options": ["string s = 'text';", "var s: String = 'text';", "String s = 'text';", "char s = 'text';"], "a": "string s = 'text';"},
        {"q": "Como você define o tipo de retorno de um método?", "options": ["void method()", "public method() {}", "method(): void", "returnType method()"], "a": "void method()"},
        {"q": "Como você instância uma nova lista em C#?", "options": ["List<int> myList = new List();", "List<int> myList = new List<int>();", "List<int> myList = []; ", "List<int> myList = new();"], "a": "List<int> myList = new List<int>();"},
        {"q": "Qual tipo de dados é usado para representar uma sequência de caracteres em C#?", "options": ["string", "char", "StringBuilder", "Text"], "a": "string"},
        {"q": "Como você compara dois objetos em C#?", "options": ["if (obj1 == obj2)", "if (obj1.Equals(obj2))", "obj1.compareTo(obj2);", "obj1 == obj2 ? true : false;"], "a": "if (obj1.Equals(obj2))"},
        {"q": "Como você define um método para sobrescrever um método base em C#?", "options": ["override void myMethod()", "virtual void myMethod()", "protected void myMethod()", "public override myMethod()"], "a": "override void myMethod()"},
        {"q": "Qual operador você usa para verificar se um objeto é uma instância de uma classe?", "options": ["is", "instanceof", "check", "typeof"], "a": "is"}
    ],
    "C++": [
        {"q": "Como você declara uma variável em C++?", "options": ["int x = 10;", "x = 10;", "var x = 10;", "float x = 10;"], "a": "int x = 10;"},
        {"q": "Qual palavra-chave é usada para definir uma classe em C++?", "options": ["class", "def", "struct", "function"], "a": "class"},
        {"q": "Como você cria um objeto em C++?", "options": ["var obj = new MyClass();", "MyClass obj;", "obj = new MyClass();", "MyClass obj = new MyClass();"], "a": "MyClass obj;"},
        {"q": "Qual método é usado para imprimir no console em C++?", "options": ["Console.WriteLine()", "System.out.println()", "std::cout", "echo()"], "a": "std::cout"},
        {"q": "Como você cria um loop 'for' em C++?", "options": ["for (int i = 0; i < 10; i++) {}", "for (int i: 0; i < 10; i++) {}", "for(int i = 0; i < 10; i++) {}", "for i = 0 to 10 {}"], "a": "for (int i = 0; i < 10; i++) {}"},
        {"q": "Qual operador é usado para comparação em C++?", "options": ["==", "=", "===", "!="], "a": "=="},
        {"q": "Como você define uma constante em C++?", "options": ["const int PI = 3;", "final int PI = 3;", "constant int PI = 3;", "let PI = 3;"], "a": "const int PI = 3;"},
        {"q": "Como você cria um array em C++?", "options": ["int arr[] = {1, 2, 3};", "int[] arr = {1, 2, 3};", "int arr[3] = {1, 2, 3};", "arr = {1, 2, 3};"], "a": "int arr[3] = {1, 2, 3};"},
        {"q": "Como você declara uma função em C++?", "options": ["function myFunction() {}", "void myFunction() {}", "def myFunction() {}", "public function myFunction() {}"], "a": "void myFunction() {}"},
        {"q": "Como você manipula exceções em C++?", "options": ["try-catch", "try-finally", "catch-throw", "error-catch"], "a": "try-catch"},
        {"q": "Como você verifica se um objeto é nulo em C++?", "options": ["if (obj == null)", "if (obj == NULL)", "if (obj == nullptr)", "if (obj == undefined)"], "a": "if (obj == nullptr)"},
        {"q": "Como você chama um método em C++?", "options": ["myMethod();", "call myMethod();", "invoke myMethod();", "myMethod.invoke();"], "a": "myMethod();"},
        {"q": "Como você define o tipo de um parâmetro de método em C++?", "options": ["void method(int x) {}", "method(int x) {}", "int method(x) {}", "method(x: int) {}"], "a": "void method(int x) {}"},
        {"q": "Como você cria uma interface em C++?", "options": ["interface IMyInterface {}", "public interface IMyInterface {}", "interface MyInterface()", "class IMyInterface {}"], "a": "class IMyInterface {}"},
        {"q": "Como você chama um método assíncrono em C++?", "options": ["myAsyncMethod();", "await myAsyncMethod();", "async myAsyncMethod();", "call myAsyncMethod();"], "a": "myAsyncMethod();"},
        {"q": "Como você define um tipo genérico em C++?", "options": ["class MyClass<T> {}", "template <typename T> class MyClass {}", "class MyClass<T>[] {}", "MyClass<T> class {};"], "a": "template <typename T> class MyClass {}"},
        {"q": "Como você faz um cast de tipo em C++?", "options": ["(int) myObject;", "myObject as int;", "myObject.to(int);", "static_cast<int>(myObject);"], "a": "static_cast<int>(myObject);"},
        {"q": "Como você usa iteradores em C++?", "options": ["for (auto it = myList.begin(); it != myList.end(); ++it) {}", "for (int i = 0; i < myList.size(); i++) {}", "for (myList::iterator it = myList.begin(); it != myList.end(); ++it) {}", "foreach (auto it in myList) {}"], "a": "for (auto it = myList.begin(); it != myList.end(); ++it) {}"},
        {"q": "Como você define uma variável de tipo String em C++?", "options": ["std::string s = 'text';", "string s = 'text';", "char s = 'text';", "std::String s = 'text';"], "a": "std::string s = 'text';"},
        {"q": "Como você compara dois objetos em C++?", "options": ["if (obj1 == obj2)", "if (obj1.equals(obj2))", "obj1.compareTo(obj2);", "obj1 == obj2 ? true : false;"], "a": "if (obj1 == obj2)"},
        {"q": "Como você define um método para sobrescrever um método base em C++?", "options": ["override void myMethod()", "virtual void myMethod()", "protected void myMethod()", "public virtual void myMethod()"], "a": "virtual void myMethod()"},
        {"q": "Qual operador você usa para verificar se um objeto é uma instância de uma classe?", "options": ["is", "instanceof", "check", "typeid"], "a": "typeid"},
        {"q": "Qual biblioteca você usaria para manipular arquivos em C++?", "options": ["<fstream>", "<fileio>", "<iostream>", "<filesystem>"], "a": "<fstream>"},
        {"q": "Como você define uma função lambda em C++?", "options": ["auto func = [](int x) { return x + 1; };", "func = lambda(x) { return x + 1; };", "lambda(x) -> int { return x + 1; }", "lambda(x) { return x + 1; }"], "a": "auto func = [](int x) { return x + 1; };"},
        {"q": "Como você cria um ponteiro em C++?", "options": ["int* ptr = new int;", "int ptr = *new int;", "ptr = new int;", "int* ptr = malloc(sizeof(int));"], "a": "int* ptr = new int;"},
        {"q": "Como você usa o operador de resolução de escopo em C++?", "options": ["MyClass::myMethod();", "myClass::myMethod();", "MyClass:myMethod();", "myMethod::MyClass();"], "a": "MyClass::myMethod();"},
        {"q": "Como você cria uma função recursiva em C++?", "options": ["int factorial(int n) { if (n == 0) return 1; return n * factorial(n - 1); }", "function factorial(int n) { if (n == 0) return 1; return n * factorial(n - 1); }", "def factorial(int n) { if (n == 0) return 1; return n * factorial(n - 1); }", "recursive factorial(int n) { if (n == 0) return 1; return n * factorial(n - 1); }"], "a": "int factorial(int n) { if (n == 0) return 1; return n * factorial(n - 1); }"},
        {"q": "Como você usa o tipo 'nullptr' em C++?", "options": ["ptr = nullptr;", "ptr = NULL;", "ptr = null;", "ptr = new nullptr;"], "a": "ptr = nullptr;"},
        {"q": "Qual é o operador usado para alocar memória dinamicamente em C++?", "options": ["malloc()", "new", "alloc()", "create"], "a": "new"},
        {"q": "Como você define um namespace em C++?", "options": ["namespace MyNamespace {}", "namespace MyNamespace = {}; ", "namespace MyNamespace() {}", "namespace MyNamespace: {}"], "a": "namespace MyNamespace {}"},
        {"q": "Como você cria um operador sobrecarregado em C++?", "options": ["void operator+(const MyClass& obj);", "operator+(const MyClass& obj) {}", "operator+ MyClass; ", "operator +() {}"], "a": "operator+(const MyClass& obj) {}"},
        {"q": "Qual é o tipo de dados usado para armazenar números inteiros em C++?", "options": ["int", "integer", "long", "short"], "a": "int"}
    ],    
    "Go (Golang)": [
        {"q": "Como você declara uma variável em Go?", "options": ["var x int = 10", "x := 10", "int x = 10", "var x = 10"], "a": "x := 10"},
        {"q": "Qual palavra-chave é usada para definir uma função em Go?", "options": ["def", "function", "func", "method"], "a": "func"},
        {"q": "Como você cria uma estrutura (struct) em Go?", "options": ["struct Person { name string }", "type Person struct { name string }", "struct Person = { name string }", "type Person struct name string"], "a": "type Person struct { name string }"},
        {"q": "Como você cria um método em Go?", "options": ["func (p Person) greet() {}", "method (p Person) greet() {}", "def greet(p Person) {}", "func greet(p Person) {}"], "a": "func (p Person) greet() {}"},
        {"q": "Como você cria um array em Go?", "options": ["arr := [3]int{1, 2, 3}", "var arr[3] = {1, 2, 3}", "arr := [1, 2, 3]", "arr = {1, 2, 3}"], "a": "arr := [3]int{1, 2, 3}"},
        {"q": "Qual operador é usado para atribuição em Go?", "options": ["=", "==", ":=", "==="], "a": ":="},
        {"q": "Como você define uma constante em Go?", "options": ["const x = 10", "constant x = 10", "var const x = 10", "const int x = 10"], "a": "const x = 10"},
        {"q": "Como você cria um mapa (map) em Go?", "options": ["var m map[string]int", "map m = {key: value}", "map[string]int m", "map = new map[string]int"], "a": "var m map[string]int"},
        {"q": "Como você faz um loop 'for' em Go?", "options": ["for i := 0; i < 10; i++ {}", "for i in range(10) {}", "for i = 0; i < 10; i++ {}", "for (int i = 0; i < 10; i++) {}"], "a": "for i := 0; i < 10; i++ {}"},
        {"q": "Como você retorna um valor de uma função em Go?", "options": ["return x", "return x;", "return(x)", "x return;"], "a": "return x"},
        {"q": "Qual é o tipo de dado usado para representar texto em Go?", "options": ["string", "char", "text", "String"], "a": "string"},
        {"q": "Como você usa uma função anônima em Go?", "options": ["func() {}", "func() { fmt.Println() }", "func main() { fmt.Println() }", "main() { fmt.Println() }"], "a": "func() { fmt.Println() }"},
        {"q": "Como você lida com erros em Go?", "options": ["if err != nil {}", "try-catch", "catch err", "if (err) throw"], "a": "if err != nil {}"},
        {"q": "Como você define um tipo de dado customizado em Go?", "options": ["type MyType int", "MyType int type", "custom MyType = int", "type MyType = int"], "a": "type MyType int"},
        {"q": "Como você chama uma função em Go?", "options": ["myFunction();", "myFunction", "call myFunction();", "myFunction()"], "a": "myFunction()"},
        {"q": "Como você verifica se uma chave existe em um mapa em Go?", "options": ["value, ok := m[key]", "ok := m[key]", "value := m[key]; if ok", "if m.contains(key)"], "a": "value, ok := m[key]"},
        {"q": "Como você cria um canal (channel) em Go?", "options": ["ch := make(chan int)", "var ch chan int", "ch := new(chan int)", "chan ch = int"], "a": "ch := make(chan int)"},
        {"q": "Qual é o método utilizado para enviar dados em um canal em Go?", "options": ["ch <- data", "send ch(data)", "ch.put(data)", "ch.send(data)"], "a": "ch <- data"},
        {"q": "Como você define uma interface em Go?", "options": ["type MyInterface interface {}", "interface MyInterface {}", "MyInterface interface type {}", "interface MyInterface()"], "a": "type MyInterface interface {}"},
        {"q": "Qual é a maneira correta de importar pacotes em Go?", "options": ["import 'fmt'", "import fmt", "import \"fmt\"", "include fmt"], "a": "import \"fmt\""},
        {"q": "Como você lida com pacotes em Go?", "options": ["go install", "go use", "go package", "go get"], "a": "go get"},
        {"q": "Como você cria uma goroutine em Go?", "options": ["go myFunction()", "go function myFunction", "goroutine myFunction()", "function myFunction() { go }"], "a": "go myFunction()"},
        {"q": "Como você espera a execução de uma goroutine em Go?", "options": ["sync.Wait()", "sync.WaitGroup", "waitGroup.Wait()", "sync.WaitGroup.Wait()"], "a": "sync.WaitGroup"},
        {"q": "Como você cria uma estrutura de dados com múltiplos valores em Go?", "options": ["map[string][]int", "map[]int[]string", "map<int, string[]>", "map[string]map<int>"], "a": "map[string][]int"},
        {"q": "Qual é o comando usado para rodar um arquivo Go?", "options": ["go execute file.go", "go run file.go", "go compile file.go", "go start file.go"], "a": "go run file.go"},
        {"q": "Como você cria um pacote em Go?", "options": ["package mypackage", "create package mypackage", "myPackage := package", "package new mypackage"], "a": "package mypackage"},
        {"q": "Como você cria uma função recursiva em Go?", "options": ["func factorial(n int) int { if n == 0 { return 1 } return n * factorial(n - 1) }", "def factorial(n) { if (n == 0) return 1; return n * factorial(n - 1); }", "factorial(n) { if n == 0 return 1 else return n * factorial(n-1) }", "recursion factorial(n) { if (n == 0) return 1 else return n * factorial(n-1) }"], "a": "func factorial(n int) int { if n == 0 { return 1 } return n * factorial(n - 1) }"},
        {"q": "Como você cria uma função que retorna múltiplos valores em Go?", "options": ["func myFunction() (int, string) { return 1, \"Hello\" }", "func myFunction() -> (int, string) { return 1, \"Hello\" }", "function myFunction() { return 1, \"Hello\" }", "myFunction() returns (int, string) { return 1, \"Hello\" }"], "a": "func myFunction() (int, string) { return 1, \"Hello\" }"},
        {"q": "Como você lida com múltiplos canais em Go?", "options": ["select", "case", "channel select", "go select"], "a": "select"},
        {"q": "Como você define uma função anônima com parâmetros em Go?", "options": ["func(x int) {}", "func (x int) {}", "func {x int} {}", "func(x: int) {}"], "a": "func(x int) {}"},
        {"q": "Como você converte tipos em Go?", "options": ["type(x)", "int(x)", "x.toInt()", "x as int"], "a": "int(x)"},
        {"q": "Qual palavra-chave é usada para encapsular um valor dentro de uma função em Go?", "options": ["defer", "return", "exit", "continue"], "a": "defer"},
        {"q": "Como você define uma variável global em Go?", "options": ["var globalVar int", "global int var", "int globalVar = 10", "var globalVar = 10"], "a": "var globalVar int"}
    ],    
    "HTML": [
        {"q": "O que significa HTML?", "options": ["HyperText Markup Language", "Hyper Transfer Markup Language", "HighText Markup Language", "HyperText Markup Logics"], "a": "HyperText Markup Language"},
        {"q": "Qual é a principal função do HTML?", "options": ["Estruturar o conteúdo de uma página web", "Estilizar a aparência de uma página web", "Gerenciar banco de dados", "Criar animações"], "a": "Estruturar o conteúdo de uma página web"},
        {"q": "Qual é a tag HTML usada para definir um título?", "options": ["<title>", "<h1>", "<header>", "<h2>"], "a": "<title>"},
        {"q": "Como você insere um link em uma página HTML?", "options": ["<a href='url'>Texto do link</a>", "<link='url'>Texto do link</link>", "<url href='url'>Texto do link</url>", "<a url='url'>Texto do link</a>"], "a": "<a href='url'>Texto do link</a>"},
        {"q": "Qual é a tag HTML usada para definir uma imagem?", "options": ["<img src='url' alt='descrição'>", "<image src='url' alt='descrição'>", "<picture src='url' alt='descrição'>", "<image='url' alt='descrição'>"], "a": "<img src='url' alt='descrição'>"},
        {"q": "Como você cria uma lista ordenada em HTML?", "options": ["<ol><li>Item 1</li></ol>", "<ul><li>Item 1</li></ul>", "<list><item>Item 1</item></list>", "<ordered><li>Item 1</li></ordered>"], "a": "<ol><li>Item 1</li></ol>"},
        {"q": "Como você cria uma lista não ordenada em HTML?", "options": ["<ul><li>Item 1</li></ul>", "<ol><li>Item 1</li></ol>", "<list><item>Item 1</item></list>", "<unordered><li>Item 1</li></unordered>"], "a": "<ul><li>Item 1</li></ul>"},
        {"q": "Qual é a tag HTML usada para definir um parágrafo?", "options": ["<p>Texto do parágrafo</p>", "<para>Texto do parágrafo</para>", "<paragraph>Texto do parágrafo</paragraph>", "<text>Texto do parágrafo</text>"], "a": "<p>Texto do parágrafo</p>"},
        {"q": "Como você define uma tabela em HTML?", "options": ["<table><tr><td>Celula</td></tr></table>", "<tab><tr><td>Celula</td></tr></tab>", "<tabel><tr><td>Celula</td></tr></tabel>", "<table><row><td>Celula</td></row></table>"], "a": "<table><tr><td>Celula</td></tr></table>"},
        {"q": "O que faz a tag <form>?", "options": ["Define um formulário", "Define um parágrafo", "Define uma tabela", "Define uma lista"], "a": "Define um formulário"},
        {"q": "Qual tag é usada para inserir um botão em HTML?", "options": ["<button>Texto</button>", "<btn>Texto</btn>", "<input type='button' value='Texto'>", "<click>Texto</click>"], "a": "<button>Texto</button>"},
        {"q": "Qual é a tag para inserir uma quebra de linha em HTML?", "options": ["<br>", "<hr>", "<break>", "<line>"], "a": "<br>"},
        {"q": "Como você define um comentário em HTML?", "options": ["<!-- Comentário -->", "// Comentário", "/* Comentário */", "# Comentário"], "a": "<!-- Comentário -->"},
        {"q": "Qual tag HTML é usada para definir uma âncora?", "options": ["<a>", "<anchor>", "<link>", "<href>"], "a": "<a>"},
        {"q": "Como você define um campo de entrada de texto em um formulário HTML?", "options": ["<input type='text'>", "<text input=''>", "<form type='text'>", "<input type='textfield'>"], "a": "<input type='text'>"},
        {"q": "Qual tag HTML é usada para definir uma área de cabeçalho?", "options": ["<header>", "<head>", "<h1>", "<top>"], "a": "<header>"},
        {"q": "O que é a tag <meta> em HTML?", "options": ["Fornece metadados sobre o documento", "Define o título da página", "Define o conteúdo principal", "Adiciona imagens à página"], "a": "Fornece metadados sobre o documento"},
        {"q": "Qual a função da tag <script> em HTML?", "options": ["Define um bloco de código JavaScript", "Define um bloco de código CSS", "Define o conteúdo do título", "Define um bloco de texto"], "a": "Define um bloco de código JavaScript"},
        {"q": "Como você define um link para abrir em uma nova janela?", "options": ["<a href='url' target='_blank'>Link</a>", "<a href='url' target='_new'>Link</a>", "<a href='url' target='new'>Link</a>", "<a href='url' open='new'>Link</a>"], "a": "<a href='url' target='_blank'>Link</a>"},
        {"q": "Como você adiciona uma fonte externa a uma página HTML?", "options": ["<link rel='stylesheet' href='style.css'>", "<style src='style.css'>", "<source href='style.css'>", "<css src='style.css'>"], "a": "<link rel='stylesheet' href='style.css'>"},
        {"q": "Qual tag é usada para agrupar conteúdo em HTML?", "options": ["<div>", "<group>", "<section>", "<span>"], "a": "<div>"},
        {"q": "Como você define um cabeçalho de nível 1 em HTML?", "options": ["<h1>Texto</h1>", "<header>Texto</header>", "<title>Texto</title>", "<heading>Texto</heading>"], "a": "<h1>Texto</h1>"},
        {"q": "Qual a função da tag <link> em HTML?", "options": ["Relacionar um documento externo", "Definir a cor de fundo", "Definir um parágrafo", "Criar uma tabela"], "a": "Relacionar um documento externo"},
        {"q": "Como você define um tipo de input para senha em HTML?", "options": ["<input type='password'>", "<input type='text' password>", "<input type='secure'>", "<input password=''>"], "a": "<input type='password'>"},
        {"q": "O que faz a tag <iframe>?", "options": ["Incorpora outro documento HTML", "Define uma área de formulário", "Cria um botão", "Adiciona uma imagem"], "a": "Incorpora outro documento HTML"},
        {"q": "Como você cria um link para enviar um email em HTML?", "options": ["<a href='mailto:email@example.com'>Enviar email</a>", "<a href='email:email@example.com'>Enviar email</a>", "<email href='email@example.com'>Enviar email</email>", "<a mail='email@example.com'>Enviar email</a>"], "a": "<a href='mailto:email@example.com'>Enviar email</a>"},
        {"q": "Qual é a função da tag <style> em HTML?", "options": ["Define o estilo interno da página", "Define um script de JavaScript", "Define a estrutura de tabela", "Define o conteúdo de uma lista"], "a": "Define o estilo interno da página"},
        {"q": "O que é a tag <hr> em HTML?", "options": ["Define uma linha horizontal", "Define uma imagem", "Define um link", "Define uma quebra de página"], "a": "Define uma linha horizontal"},
        {"q": "Como você faz um formulário ser enviado em HTML?", "options": ["<form action='url' method='post'>", "<submit action='url'>", "<form submit='url'>", "<action url=''>"], "a": "<form action='url' method='post'>"},
        {"q": "Como você cria uma âncora com um link para uma seção específica da página?", "options": ["<a href='#section-id'>Link</a>", "<a href='section-id'>Link</a>", "<anchor href='#section-id'>Link</anchor>", "<link href='#section-id'>Link</link>"], "a": "<a href='#section-id'>Link</a>"}
    ],
    "Java": [
        {"q": "Como você declara uma variável em Java?", "options": ["var x = 10;", "int x = 10;", "x := 10;", "var int x = 10;"], "a": "int x = 10;"},
        {"q": "Qual palavra-chave é usada para definir uma classe em Java?", "options": ["class", "def", "structure", "type"], "a": "class"},
        {"q": "Como você cria um objeto em Java?", "options": ["Object obj = new Object();", "obj = Object();", "new Object obj;", "Object obj();"], "a": "Object obj = new Object();"},
        {"q": "Qual método é usado para iniciar um programa Java?", "options": ["main()", "run()", "start()", "init()"], "a": "main()"},
        {"q": "Como você define um método em Java?", "options": ["void myMethod() {}", "method void myMethod() {}", "function void myMethod() {}", "myMethod() void {}"], "a": "void myMethod() {}"},
        {"q": "Como você cria uma variável de tipo String em Java?", "options": ["String str = \"Hello\";", "str := \"Hello\";", "var String str = \"Hello\";", "String str := \"Hello\";"], "a": "String str = \"Hello\";"},
        {"q": "Como você faz um loop 'for' em Java?", "options": ["for (int i = 0; i < 10; i++) {}", "for i in range(10) {}", "for (i = 0; i < 10; i++) {}", "for (int i; i < 10; i++) {}"], "a": "for (int i = 0; i < 10; i++) {}"},
        {"q": "Qual é o operador de atribuição em Java?", "options": ["=", "==", ":=", "==="], "a": "="},
        {"q": "Como você cria uma classe em Java?", "options": ["class MyClass {}", "new class MyClass {}", "type MyClass {}", "MyClass = class {}"], "a": "class MyClass {}"},
        {"q": "Como você declara uma constante em Java?", "options": ["const int x = 10;", "final int x = 10;", "constant int x = 10;", "int final x = 10;"], "a": "final int x = 10;"},
        {"q": "Como você faz a herança de classes em Java?", "options": ["class MyClass extends SuperClass {}", "MyClass inherit SuperClass {}", "class MyClass : SuperClass {}", "class MyClass extends SuperClass()"], "a": "class MyClass extends SuperClass {}"},
        {"q": "Como você chama um método de uma classe em Java?", "options": ["MyClass.myMethod();", "myMethod();", "this.myMethod();", "MyClass::myMethod();"], "a": "MyClass.myMethod();"},
        {"q": "Qual é o tipo de dado para valores decimais em Java?", "options": ["double", "float", "decimal", "real"], "a": "double"},
        {"q": "Como você trata exceções em Java?", "options": ["try-catch", "catch-try", "try-except", "throw-catch"], "a": "try-catch"},
        {"q": "Como você cria uma interface em Java?", "options": ["interface MyInterface {}", "MyInterface interface {}", "interface: MyInterface {}", "MyInterface = interface {}"], "a": "interface MyInterface {}"},
        {"q": "Como você cria um array em Java?", "options": ["int[] arr = {1, 2, 3};", "arr := [1, 2, 3];", "var arr = new int[3] {1, 2, 3};", "int arr[3] = {1, 2, 3};"], "a": "int[] arr = {1, 2, 3};"},
        {"q": "Como você usa uma estrutura de controle 'switch' em Java?", "options": ["switch(x) { case 1: break; }", "switch x { case 1: break; }", "switch x: { case 1: break; }", "if(x == 1) break;"], "a": "switch(x) { case 1: break; }"},
        {"q": "Como você declara uma variável local dentro de um método em Java?", "options": ["int x = 10;", "var x = 10;", "x := 10;", "int x;"], "a": "int x = 10;"},
        {"q": "Como você faz a conversão de tipos em Java?", "options": ["(int) x", "(float) x", "(type) x", "x as int"], "a": "(int) x"},
        {"q": "Como você cria um objeto de uma classe em Java?", "options": ["MyClass obj = new MyClass();", "obj = MyClass();", "new MyClass obj;", "MyClass obj = new MyClass();"], "a": "MyClass obj = new MyClass();"},
        {"q": "Como você define uma classe abstrata em Java?", "options": ["abstract class MyClass {}", "class MyClass abstract {}", "MyClass abstract class {}", "class abstract MyClass {}"], "a": "abstract class MyClass {}"},
        {"q": "Qual é o comando usado para interromper um loop em Java?", "options": ["break", "stop", "end", "exit"], "a": "break"},
        {"q": "Como você faz um loop 'while' em Java?", "options": ["while (x < 10) {}", "loop (x < 10) {}", "while x < 10 {}", "for (x = 0; x < 10) {}"], "a": "while (x < 10) {}"},
        {"q": "Como você cria uma classe anônima em Java?", "options": ["new MyClass() {}", "class MyClass() {}", "MyClass { }", "new class MyClass() {}"], "a": "new MyClass() {}"},
        {"q": "Qual é o tipo de dado usado para representar um valor booleano em Java?", "options": ["bool", "boolean", "boolen", "booleano"], "a": "boolean"},
        {"q": "Qual é o operador usado para comparar dois valores em Java?", "options": ["=", "==", "===", "!="], "a": "=="},
        {"q": "Qual é a diferença entre 'final' e 'finally' em Java?", "options": ["final define uma constante, finally é para tratamento de exceções", "final define um método, finally é para variáveis", "final é para variáveis, finally é para pacotes", "final é para métodos, finally é para classes"], "a": "final define uma constante, finally é para tratamento de exceções"},
        {"q": "Como você define um construtor em Java?", "options": ["public MyClass() {}", "public constructor MyClass() {}", "constructor MyClass() {}", "class MyClass() {}"], "a": "public MyClass() {}"},
        {"q": "Como você faz uma comparação de igualdade entre objetos em Java?", "options": ["equals()", "==", "compare()", "objectEquals()"], "a": "equals()"},
        {"q": "Qual palavra-chave é usada para evitar que uma classe seja estendida em Java?", "options": ["final", "static", "abstract", "extends"], "a": "final"},
        {"q": "Como você imprime uma mensagem no console em Java?", "options": ["System.out.println()", "System.print()", "print()", "console.log()"], "a": "System.out.println()"},
        {"q": "Como você cria um método estático em Java?", "options": ["static void myMethod() {}", "void static myMethod() {}", "myMethod static() {}", "static myMethod() void {}"], "a": "static void myMethod() {}"},
        {"q": "Como você instância uma classe em Java?", "options": ["MyClass obj = new MyClass();", "MyClass obj = MyClass();", "obj = MyClass();", "MyClass obj();"], "a": "MyClass obj = new MyClass();"}
    ],
    "JavaScript": [
        {"q": "Qual é o operador de atribuição em JavaScript?", "options": ["=", "==", ":=", "==="], "a": "="},
        {"q": "Como você cria uma variável em JavaScript?", "options": ["var x = 10;", "int x = 10;", "x := 10;", "let x = 10;"], "a": "var x = 10;"},
        {"q": "Qual é a função para exibir uma mensagem no console em JavaScript?", "options": ["console.show()", "console.log()", "log.console()", "print.console()"], "a": "console.log()"},
        {"q": "Qual é o operador para verificar igualdade e tipo em JavaScript?", "options": ["==", "=", "===", "!=="], "a": "==="},
        {"q": "Como você declara uma função em JavaScript?", "options": ["function myFunc() {}", "def myFunc() {}", "func myFunc() {}", "myFunc() function {}"], "a": "function myFunc() {}"},
        {"q": "Como você declara uma variável que não pode ser reatribuída em JavaScript?", "options": ["const x = 10;", "let x = 10;", "var x = 10;", "final x = 10;"], "a": "const x = 10;"},
        {"q": "Como você cria um objeto em JavaScript?", "options": ["let obj = {};","obj = object();","new Object obj;","let obj = new Object();"], "a": "let obj = {};"},
        {"q": "Qual é o método usado para adicionar um item ao final de um array em JavaScript?", "options": ["add()", "append()", "push()", "insert()"], "a": "push()"},
        {"q": "Como você cria um array em JavaScript?", "options": ["let arr = [1, 2, 3];", "let arr = {1, 2, 3};", "arr = new Array(1, 2, 3);", "let arr = (1, 2, 3);"], "a": "let arr = [1, 2, 3];"},
        {"q": "Como você remove o último item de um array em JavaScript?", "options": ["pop()", "shift()", "remove()", "delete()"], "a": "pop()"},
        {"q": "Qual é o operador usado para comparar dois valores em JavaScript?", "options": ["=", "==", "===", "!=="], "a": "=="},
        {"q": "Como você define uma função anônima em JavaScript?", "options": ["function() {}", "function anonymous() {}", "function { return; }", "() => {}"], "a": "() => {}"},
        {"q": "Como você define um método em um objeto em JavaScript?", "options": ["myMethod: function() {}", "function myMethod() {}", "let myMethod() {}", "myMethod = function() {}"], "a": "myMethod: function() {}"},
        {"q": "Como você cria um loop 'for' em JavaScript?", "options": ["for (let i = 0; i < 10; i++) {}", "for i in range(10) {}", "loop for (let i = 0; i < 10) {}", "for (i = 0; i < 10) {}"], "a": "for (let i = 0; i < 10; i++) {}"},
        {"q": "Como você cria uma estrutura condicional 'if' em JavaScript?", "options": ["if (condition) {}", "if condition {}","if condition then {}", "if: condition {}"], "a": "if (condition) {}"},
        {"q": "Qual é o método usado para iterar sobre os elementos de um array em JavaScript?", "options": ["forEach()", "iterate()", "map()", "loop()"], "a": "forEach()"},
        {"q": "Qual é a maneira correta de criar uma classe em JavaScript?", "options": ["class MyClass {}", "new MyClass()", "function MyClass {}", "class: MyClass {}"], "a": "class MyClass {}"},
        {"q": "Como você adiciona uma propriedade a um objeto em JavaScript?", "options": ["obj.property = value;", "obj.addProperty(value);", "obj.property(value);", "obj.add(property, value);"], "a": "obj.property = value;"},
        {"q": "Qual é o método usado para fazer a conversão de um número para string em JavaScript?", "options": ["toString()", "stringify()", "convert()", "parse()"], "a": "toString()"},
        {"q": "Como você declara um bloco de código em JavaScript?", "options": ["{ }", "[ ]", "( )", "< >"], "a": "{ }"},
        {"q": "Como você escreve um comentário de linha única em JavaScript?", "options": ["// comentario", "/* comentario */", "# comentario", "comment comentario"], "a": "// comentario"},
        {"q": "Como você escreve um comentário de múltiplas linhas em JavaScript?", "options": ["/* comentario */", "// comentario", "# comentario", "comment comentario"], "a": "/* comentario */"},
        {"q": "Qual é a diferença entre 'let' e 'var' em JavaScript?", "options": ["let tem escopo de bloco, var tem escopo de função", "let é mais rápido que var", "let pode ser redeclarado, var não", "não há diferença"], "a": "let tem escopo de bloco, var tem escopo de função"},
        {"q": "Qual é a diferença entre '==' e '===' em JavaScript?", "options": ["'==' compara valor, '===' compara valor e tipo", "'==' é mais rápido", "'===' é mais antigo", "'==' é para números, '===' para strings"], "a": "'==' compara valor, '===' compara valor e tipo"},
        {"q": "Como você define uma constante em JavaScript?", "options": ["const x = 10;", "constant x = 10;", "let const x = 10;", "var x = 10;"], "a": "const x = 10;"},
        {"q": "Como você transforma uma string para minúsculas em JavaScript?", "options": ["toLowerCase()", "lower()", "tolower()", "min()"], "a": "toLowerCase()"},
        {"q": "Como você transforma uma string para maiúsculas em JavaScript?", "options": ["toUpperCase()", "upper()", "toupper()", "max()"], "a": "toUpperCase()"},
        {"q": "Como você utiliza o método 'map()' em um array?", "options": ["arr.map(x => x*2);", "arr.map(x => { return x*2; });", "arr(x => x*2);", "map(arr, x => x*2);"], "a": "arr.map(x => x*2);"},
        {"q": "Como você pode evitar que um formulário seja enviado ao clicar em um botão em JavaScript?", "options": ["e.preventDefault();", "form.preventSubmit();", "submit.preventDefault();", "event.preventSubmit();"], "a": "e.preventDefault();"},
        {"q": "Como você retorna um valor de uma função em JavaScript?", "options": ["return value;", "return: value;", "value = return;", "value return;"], "a": "return value;"},
        {"q": "O que significa 'hoisting' em JavaScript?", "options": ["Variáveis e funções são movidas para o topo do escopo", "Variáveis são declaradas com a palavra-chave 'hoist'", "Ocorre quando você define funções dentro de outras funções", "É o comportamento de manipulação de eventos"], "a": "Variáveis e funções são movidas para o topo do escopo"},
        {"q": "Como você cria um array com valores de 1 a 10 em JavaScript?", "options": ["let arr = Array.from({length: 10}, (_, i) => i+1);", "let arr = [1,2,3,4,5,6,7,8,9,10];", "let arr = new Array(10).map((x, i) => i+1);", "let arr = Array(1,2,3,4,5,6,7,8,9,10);"], "a": "let arr = Array.from({length: 10}, (_, i) => i+1);"},
        {"q": "O que faz o operador 'typeof' em JavaScript?", "options": ["Verifica o tipo de uma variável", "Transforma uma variável em uma string", "Verifica se uma variável é nula", "Retorna o valor de uma variável"], "a": "Verifica o tipo de uma variável"}
    ],
    "Objective-C": [
        {"q": "Como você declara uma variável em Objective-C?", "options": ["NSString *str = 'Hello';", "NSString str = 'Hello';", "NSString *str = \"Hello\";", "NSString *str = 'Hello'"], "a": "NSString *str = \"Hello\";"},
        {"q": "Como você cria um método em Objective-C?", "options": ["- (void)myMethod;", "- myMethod() {}", "method - (void)myMethod;", "void myMethod() -"], "a": "- (void)myMethod;"},
        {"q": "Como você cria uma classe em Objective-C?", "options": ["@interface MyClass : NSObject", "class MyClass : NSObject", "MyClass = class NSObject", "class MyClass : NSObject {}"], "a": "@interface MyClass : NSObject"},
        {"q": "Qual é a palavra-chave usada para importar um arquivo em Objective-C?", "options": ["#include", "#import", "import", "#include 'file.h'", "import file.h"], "a": "#import"},
        {"q": "Qual método é utilizado para inicializar uma instância de uma classe em Objective-C?", "options": ["- init", "- start", "- new", "- create"], "a": "- init"},
        {"q": "Qual é a maneira correta de criar uma instância de um objeto em Objective-C?", "options": ["MyClass *obj = [[MyClass alloc] init];", "MyClass *obj = [[MyClass init] alloc];", "MyClass *obj = [[MyClass new] init];", "MyClass *obj = new MyClass();"], "a": "MyClass *obj = [[MyClass alloc] init];"},
        {"q": "Qual é o símbolo usado para enviar uma mensagem a um objeto em Objective-C?", "options": [".", "->", "@", "[]"], "a": "[]"},
        {"q": "Como você chama um método de instância em Objective-C?", "options": ["[obj myMethod];", "[myMethod] obj;", "obj.myMethod();", "myMethod(obj);"], "a": "[obj myMethod];"},
        {"q": "Como você declara um método que retorna um valor em Objective-C?", "options": ["- (NSString *)myMethod;", "- (NSString)myMethod;", "NSString *myMethod();", "myMethod(NSString *)"], "a": "- (NSString *)myMethod;"},
        {"q": "Qual é o tipo de dados utilizado para representar uma string em Objective-C?", "options": ["NSString", "char *", "String", "CString"], "a": "NSString"},
        {"q": "Qual é o tipo de dados para representar um número inteiro em Objective-C?", "options": ["NSInteger", "int", "NSInteger *", "int *"], "a": "NSInteger"},
        {"q": "Qual é a maneira de declarar uma propriedade em Objective-C?", "options": ["@property (nonatomic, strong) NSString *name;", "@property NSString *name;", "@nonatomic property NSString *name;", "NSString *name @property;"], "a": "@property (nonatomic, strong) NSString *name;"},
        {"q": "Como você usa uma classe que foi importada em Objective-C?", "options": ["MyClass *obj = [[MyClass alloc] init];", "MyClass obj = [MyClass new];", "MyClass obj = [new MyClass];", "obj = MyClass.new;"], "a": "MyClass *obj = [[MyClass alloc] init];"},
        {"q": "Qual é a palavra-chave usada para definir uma constante em Objective-C?", "options": ["const", "#define", "static", "final"], "a": "#define"},
        {"q": "Como você cria um array mutável em Objective-C?", "options": ["NSMutableArray *arr = [NSMutableArray array];", "NSArray *arr = [[NSArray alloc] init];", "NSMutableArray *arr = [NSArray array];", "NSMutableArray arr = @[];"], "a": "NSMutableArray *arr = [NSMutableArray array];"},
        {"q": "Como você cria um dicionário em Objective-C?", "options": ["NSDictionary *dict = @{ 'key': 'value' };", "NSDictionary dict = { 'key': 'value' };", "NSDictionary *dict = [NSDictionary new];", "dict = new NSDictionary();"], "a": "NSDictionary *dict = @{ 'key': 'value' };"},
        {"q": "Qual é a maneira correta de adicionar um item em um NSMutableArray?", "options": ["[arr addObject:item];", "[arr insertObject:item atIndex:0];", "[arr appendObject:item];", "arr.addObject(item);"], "a": "[arr addObject:item];"},
        {"q": "Como você declara uma classe que herda de outra em Objective-C?", "options": ["@interface MyClass : SuperClass", "class MyClass inherits SuperClass", "class MyClass : SuperClass {}", "MyClass : SuperClass = class"], "a": "@interface MyClass : SuperClass"},
        {"q": "O que significa o modificador 'nonatomic' em Objective-C?", "options": ["Não garante atomicidade", "Garantia de thread safety", "Sincronização automática", "Acesso somente de leitura"], "a": "Não garante atomicidade"},
        {"q": "Como você chama um método de classe em Objective-C?", "options": ["[MyClass myClassMethod];", "[self myClassMethod];", "[obj myClassMethod];", "[MyClass new];"], "a": "[MyClass myClassMethod];"},
        {"q": "Qual é a diferença entre 'strong' e 'weak' em Objective-C?", "options": ["'strong' mantém o objeto na memória, 'weak' não", "'strong' é mais rápido que 'weak'", "'strong' refere-se a valores primitivos", "'weak' é para objetos imutáveis"], "a": "'strong' mantém o objeto na memória, 'weak' não"},
        {"q": "Como você lida com exceções em Objective-C?", "options": ["@try @catch", "@exception @catch", "try catch", "throw catch"], "a": "@try @catch"},
        {"q": "O que significa o modificador 'autorelease' em Objective-C?", "options": ["Retorna o objeto à pool de objetos", "Libera o objeto imediatamente", "Aumenta a contagem de referências", "Mantém o objeto por mais tempo na memória"], "a": "Retorna o objeto à pool de objetos"},
        {"q": "Qual é o tipo de dados para armazenar um número decimal em Objective-C?", "options": ["CGFloat", "double", "decimal", "float"], "a": "CGFloat"},
        {"q": "Como você verifica se um objeto é nulo em Objective-C?", "options": ["if (obj == nil) {}", "if (obj == null) {}", "if (obj == NULL) {}", "if (obj == undefined) {}"], "a": "if (obj == nil) {}"},
        {"q": "Qual é a sintaxe correta para usar blocos em Objective-C?", "options": ["^returnValue;", "{ returnValue; }", "block(returnValue);", "block : returnValue;"], "a": "^returnValue;"},
        {"q": "O que faz o operador 'self' em Objective-C?", "options": ["Refere-se à instância do objeto atual", "Refere-se à classe atual", "Refere-se ao método de instância", "Refere-se a uma variável local"], "a": "Refere-se à instância do objeto atual"},
        {"q": "Qual é o tipo de dados usado para representar um valor booleano em Objective-C?", "options": ["BOOL", "bool", "boolean", "Boolean"], "a": "BOOL"},
        {"q": "Como você executa um método em segundo plano em Objective-C?", "options": ["[self performSelectorInBackground:selector withObject:arg];", "[self performInBackground:selector];", "[self asyncPerform:selector];", "[self executeInBackground:selector];"], "a": "[self performSelectorInBackground:selector withObject:arg];"},
        {"q": "Como você cria uma instância de uma classe utilizando 'alloc' e 'init' em Objective-C?", "options": ["MyClass *obj = [[MyClass alloc] init];", "MyClass *obj = new MyClass();", "MyClass obj = [MyClass alloc] init;", "MyClass obj = new MyClass();"], "a": "MyClass *obj = [[MyClass alloc] init];"}
    ],
    "PHP": [
        {"q": "Qual é a maneira correta de declarar uma variável em PHP?", "options": ["$variable = 'value';", "variable = '$value';", "var $value = 'value';", "$value = value;"], "a": "$variable = 'value';"},
        {"q": "Como você declara uma função em PHP?", "options": ["function myFunction() {}", "function: myFunction() {}", "myFunction() function {}", "def myFunction() {}"], "a": "function myFunction() {}"},
        {"q": "Como você inclui um arquivo em PHP?", "options": ["include 'file.php';", "import 'file.php';", "require 'file.php';", "include file.php;"], "a": "include 'file.php';"},
        {"q": "O que o comando 'echo' faz em PHP?", "options": ["Exibe texto na tela", "Envia dados para o servidor", "Retorna um valor", "Exibe uma mensagem de erro"], "a": "Exibe texto na tela"},
        {"q": "Como você cria uma classe em PHP?", "options": ["class MyClass {}", "MyClass class {}", "create class MyClass {}", "class MyClass() {}"], "a": "class MyClass {}"},
        {"q": "Qual é a forma correta de instanciar um objeto em PHP?", "options": ["$obj = new MyClass();", "$obj = MyClass();", "new MyClass $obj;", "$obj = MyClass.new();"], "a": "$obj = new MyClass();"},
        {"q": "Como você define uma constante em PHP?", "options": ["define('MY_CONSTANT', 'value');", "const MY_CONSTANT = 'value';", "constant('MY_CONSTANT', 'value');", "const MY_CONSTANT = value;"], "a": "define('MY_CONSTANT', 'value');"},
        {"q": "Como você verifica se uma variável está definida em PHP?", "options": ["isset($variable);", "is_null($variable);", "is_defined($variable);", "defined($variable);"], "a": "isset($variable);"},
        {"q": "Qual é a função para obter a quantidade de elementos em um array em PHP?", "options": ["count($array);", "length($array);", "size($array);", "getLength($array);"], "a": "count($array);"},
        {"q": "Como você cria um array em PHP?", "options": ["$arr = array();", "$arr = [];", "$arr = array[];", "array[] = $arr;"], "a": "$arr = array();"},
        {"q": "Como você define um parâmetro com valor padrão em uma função PHP?", "options": ["function myFunction($param = 'default') {}", "function myFunction($param := 'default') {}", "function myFunction($param : 'default') {}", "myFunction($param = 'default') {}"], "a": "function myFunction($param = 'default') {}"},
        {"q": "Como você inclui arquivos de configuração em PHP?", "options": ["require_once 'config.php';", "include_once 'config.php';", "include 'config.php';", "require 'config.php';"], "a": "require_once 'config.php';"},
        {"q": "Qual é a função usada para obter a extensão de um arquivo em PHP?", "options": ["pathinfo($file, PATHINFO_EXTENSION);", "file_extension($file);", "get_file_extension($file);", "ext($file);"], "a": "pathinfo($file, PATHINFO_EXTENSION);"},
        {"q": "Como você envia dados via POST em PHP?", "options": ["$_POST['key'] = 'value';", "$_GET['key'] = 'value';", "post['key'] = 'value';", "$POST['key'] = 'value';"], "a": "$_POST['key'] = 'value';"},
        {"q": "Qual é a função para incluir arquivos PHP uma única vez?", "options": ["include_once 'file.php';", "include 'file.php';", "require_once 'file.php';", "require 'file.php';"], "a": "include_once 'file.php';"},
        {"q": "Qual é a diferença entre 'require' e 'include' em PHP?", "options": ["'require' gera erro fatal, 'include' não", "'include' gera erro fatal, 'require' não", "'require' pode ser usado em arquivos de configuração", "'require' e 'include' são a mesma coisa"], "a": "'require' gera erro fatal, 'include' não"},
        {"q": "Como você faz uma comparação em PHP?", "options": ["$a == $b", "$a = $b", "$a != $b", "$a !== $b"], "a": "$a == $b"},
        {"q": "Como você cria uma função anônima em PHP?", "options": ["$function = function() {}; ", "function() {}; ", "create function() {}", "def function() {};"], "a": "$function = function() {};"},
        {"q": "Como você cria um loop em PHP?", "options": ["foreach ($array as $item) {}", "for $i = 0; $i < count($array); $i++ {}", "loop($array) {}", "for ($array) {}"], "a": "foreach ($array as $item) {}"},
        {"q": "Qual é a maneira de escapar uma string em PHP?", "options": ["\\$string", "string\\", "\"string\"", "escape(string)"], "a": "string\\"},
        {"q": "Como você conecta um banco de dados MySQL em PHP?", "options": ["$db = new mysqli('host', 'user', 'password', 'database');", "$db = mysqli_connect('host', 'user', 'password', 'database');", "$db = new PDO('mysql:host=host;dbname=database', 'user', 'password');", "$db = mysql_connect('host', 'user', 'password');"], "a": "$db = new mysqli('host', 'user', 'password', 'database');"},
        {"q": "Como você trata exceções em PHP?", "options": ["try {} catch() {}", "try{} catch() {}", "try {} except() {}", "try() {} catch() {}"], "a": "try {} catch() {}"},
        {"q": "Como você cria uma constante em PHP?", "options": ["define('CONSTANT', 'value');", "constant('CONSTANT', 'value');", "const CONSTANT = 'value';", "constant = 'value';"], "a": "define('CONSTANT', 'value');"},
        {"q": "Como você retorna um valor de uma função em PHP?", "options": ["return $value;", "yield $value;", "value return;", "return: value;"], "a": "return $value;"},
        {"q": "Como você verifica se uma variável é um array em PHP?", "options": ["is_array($variable);", "array($variable);", "is_array( $variable )", "is($variable, array);"], "a": "is_array($variable);"},
        {"q": "Como você acessa um valor de um array associativo em PHP?", "options": ["$array['key'];", "$array->key;", "$array.key;", "$array['key']();"], "a": "$array['key'];"},
        {"q": "Como você executa um script PHP no terminal?", "options": ["php script.php", "run php script.php", "php execute script.php", "php start script.php"], "a": "php script.php"},
        {"q": "Como você gera um hash MD5 de uma string em PHP?", "options": ["md5('string');", "hash('md5', 'string');", "md5string('string');", "md5_hash('string');"], "a": "md5('string');"},
        {"q": "Como você pode usar sessões em PHP?", "options": ["session_start();", "start_session();", "begin_session();", "session();"], "a": "session_start();"},
        {"q": "Qual função é usada para redirecionar uma página em PHP?", "options": ["header('Location: url');", "redirect('url');", "goto('url');", "location('url');"], "a": "header('Location: url');"},
        {"q": "Como você envia um email em PHP?", "options": ["mail('to', 'subject', 'message');", "email('to', 'subject', 'message');", "send_mail('to', 'subject', 'message');", "send_email('to', 'subject', 'message');"], "a": "mail('to', 'subject', 'message');"}
    ],    
    "Python": [
        {"q": "Qual é a forma correta de declarar uma variável em Python?", "options": ["x = 10", "var x = 10", "let x = 10", "int x = 10"], "a": "x = 10"},
        {"q": "Como você define uma função em Python?", "options": ["def my_function():", "function my_function():", "func my_function():", "def myFunction(): "], "a": "def my_function():"},
        {"q": "Como você cria um loop for em Python?", "options": ["for i in range(10):", "for i in 10:", "for i: in range(10):", "loop for i in range(10):"], "a": "for i in range(10):"},
        {"q": "Como você declara uma classe em Python?", "options": ["class MyClass:", "MyClass class:", "new class MyClass:", "create class MyClass:"], "a": "class MyClass:"},
        {"q": "O que a função 'len()' faz em Python?", "options": ["Retorna o comprimento de um objeto", "Converte um número em uma string", "Verifica se um objeto existe", "Executa uma operação matemática"], "a": "Retorna o comprimento de um objeto"},
        {"q": "Como você cria um dicionário em Python?", "options": ["my_dict = {}", "my_dict = []", "my_dict = dict()", "my_dict = set()"], "a": "my_dict = {}"},
        {"q": "Como você acessa o valor de uma chave em um dicionário em Python?", "options": ["my_dict['key']", "my_dict.key", "my_dict.get('key')", "my_dict.get(key)"], "a": "my_dict['key']"},
        {"q": "Como você trata exceções em Python?", "options": ["try: except:", "try{} except{}", "catch: exception{}", "exception catch{}"], "a": "try: except:"},
        {"q": "Como você importa um módulo em Python?", "options": ["import module", "import module as m", "require module", "include module"], "a": "import module"},
        {"q": "O que a função 'input()' faz em Python?", "options": ["Solicita ao usuário que forneça uma entrada", "Exibe uma mensagem na tela", "Cria uma variável", "Define o valor de uma variável"], "a": "Solicita ao usuário que forneça uma entrada"},
        {"q": "Como você faz uma comparação em Python?", "options": ["a == b", "a = b", "a != b", "a < b"], "a": "a == b"},
        {"q": "Qual a diferença entre '==' e 'is' em Python?", "options": ["'==' compara valores, 'is' compara identidade", "'==' compara tipos, 'is' compara valores", "'==' é usado para objetos e 'is' para valores", "'==' e 'is' fazem a mesma comparação"], "a": "'==' compara valores, 'is' compara identidade"},
        {"q": "Como você define uma variável constante em Python?", "options": ["CONST_VALUE = 10", "const VALUE = 10", "constant VALUE = 10", "final VALUE = 10"], "a": "CONST_VALUE = 10"},
        {"q": "Como você verifica o tipo de uma variável em Python?", "options": ["type(x)", "typeof(x)", "is(x)", "check(x)"], "a": "type(x)"},
        {"q": "Como você define um parâmetro opcional em uma função Python?", "options": ["def my_function(x=10):", "def my_function(x->10):", "def my_function(x): x=10", "def my_function(x?:10):"], "a": "def my_function(x=10):"},
        {"q": "Como você cria uma lista em Python?", "options": ["my_list = []", "my_list = {}", "my_list = list()", "my_list = list[]"], "a": "my_list = []"},
        {"q": "Como você acessa o elemento de uma lista em Python?", "options": ["my_list[0]", "my_list(0)", "my_list{0}", "my_list.get(0)"], "a": "my_list[0]"},
        {"q": "O que a função 'range()' faz em Python?", "options": ["Gera uma sequência de números", "Verifica o tipo de um objeto", "Cria uma lista de valores", "Ordena os elementos de uma lista"], "a": "Gera uma sequência de números"},
        {"q": "Como você cria um conjunto (set) em Python?", "options": ["my_set = set()", "my_set = []", "my_set = {}", "my_set = ()"], "a": "my_set = set()"},
        {"q": "Como você filtra elementos de uma lista em Python?", "options": ["filter(function, list)", "list.filter(function)", "list.select(function)", "list.filter_by(function)"], "a": "filter(function, list)"},
        {"q": "Qual é a função usada para abrir um arquivo em Python?", "options": ["open('file.txt')", "file.open('file.txt')", "open_file('file.txt')", "file.read('file.txt')"], "a": "open('file.txt')"},
        {"q": "Como você escreve dados em um arquivo em Python?", "options": ["file.write('data')", "open.write('data')", "write('data', file)", "open('file').write('data')"], "a": "file.write('data')"},
        {"q": "Como você encerra um arquivo após abrir em Python?", "options": ["file.close()", "close(file)", "file.end()", "end(file)"], "a": "file.close()"},
        {"q": "Como você importa uma função específica de um módulo em Python?", "options": ["from module import function", "import module.function", "import function from module", "from module import *"], "a": "from module import function"},
        {"q": "O que a função 'sorted()' faz em Python?", "options": ["Ordena uma lista", "Filtra uma lista", "Converte uma lista em string", "Calcula a soma de uma lista"], "a": "Ordena uma lista"},
        {"q": "Como você define uma expressão lambda em Python?", "options": ["lambda x: x*2", "def lambda(x): x*2", "lambda(x) {x*2}", "expr lambda(x): x*2"], "a": "lambda x: x*2"},
        {"q": "Como você faz um loop enquanto em Python?", "options": ["while condition:", "loop while condition:", "repeat condition:", "for condition while:"], "a": "while condition:"},
        {"q": "Qual é a função usada para mapear elementos em uma lista em Python?", "options": ["map(function, list)", "list.map(function)", "map(function, list)", "list.map(function)"], "a": "map(function, list)"},
        {"q": "Como você adiciona um item a uma lista em Python?", "options": ["list.append(item)", "list.add(item)", "append(list, item)", "add(list, item)"], "a": "list.append(item)"},
        {"q": "Como você faz uma interpolação de string em Python?", "options": ["f'Hello, {name}'", "'Hello, {name}'", "'Hello, '+name", "f'Hello '+{name}"], "a": "f'Hello, {name}'"},
        {"q": "O que a função 'map()' faz em Python?", "options": ["Aplica uma função a cada item de uma lista", "Retorna o comprimento de uma lista", "Filtra elementos de uma lista", "Converte uma lista para string"], "a": "Aplica uma função a cada item de uma lista"},
        {"q": "Como você altera o valor de um item em uma lista Python?", "options": ["my_list[0] = 'new value'", "my_list[0].set('new value')", "my_list.set(0, 'new value')", "my_list.add('new value')"], "a": "my_list[0] = 'new value'"},
        {"q": "Como você executa uma função de um módulo importado?", "options": ["module.function()", "module->function()", "function.module()", "execute.function(module)"], "a": "module.function()"}
    ],
    "SQL": [
        {"q": "O que significa a sigla SQL?", "options": ["Structured Query Language", "Standard Query Language", "Simple Query Language", "Structured Question Language"], "a": "Structured Query Language"},
        {"q": "Qual comando é usado para selecionar dados em SQL?", "options": ["SELECT", "GET", "FETCH", "PICK"], "a": "SELECT"},
        {"q": "Qual comando é utilizado para adicionar uma nova tabela em SQL?", "options": ["CREATE TABLE", "NEW TABLE", "ADD TABLE", "INSERT TABLE"], "a": "CREATE TABLE"},
        {"q": "Como você altera dados em uma tabela SQL?", "options": ["UPDATE", "MODIFY", "CHANGE", "SET"], "a": "UPDATE"},
        {"q": "Qual comando é utilizado para excluir uma linha de uma tabela?", "options": ["DELETE", "REMOVE", "DROP", "CLEAR"], "a": "DELETE"},
        {"q": "Qual é o comando para excluir uma tabela inteira?", "options": ["DROP TABLE", "DELETE TABLE", "REMOVE TABLE", "CLEAR TABLE"], "a": "DROP TABLE"},
        {"q": "Como você cria um índice em SQL?", "options": ["CREATE INDEX", "CREATE KEY", "ADD INDEX", "CREATE TABLE INDEX"], "a": "CREATE INDEX"},
        {"q": "O que significa a cláusula 'WHERE' em SQL?", "options": ["Filtra os dados de acordo com uma condição", "Seleciona todas as colunas", "Ordena os dados", "Exclui dados"], "a": "Filtra os dados de acordo com uma condição"},
        {"q": "Qual comando é utilizado para adicionar novos dados em uma tabela?", "options": ["INSERT INTO", "ADD INTO", "INSERT", "INSERT NEW"], "a": "INSERT INTO"},
        {"q": "O que é uma chave primária em SQL?", "options": ["Uma coluna que identifica exclusivamente cada linha", "Uma chave estrangeira", "Uma coluna que permite valores duplicados", "Uma coluna de texto"], "a": "Uma coluna que identifica exclusivamente cada linha"},
        {"q": "Qual comando é utilizado para alterar a estrutura de uma tabela existente?", "options": ["ALTER TABLE", "CHANGE TABLE", "UPDATE TABLE", "MODIFY TABLE"], "a": "ALTER TABLE"},
        {"q": "O que faz a cláusula 'GROUP BY'?", "options": ["Agrupa as linhas com valores iguais", "Ordena as linhas por ordem alfabética", "Filtra as linhas", "Seleciona as colunas"], "a": "Agrupa as linhas com valores iguais"},
        {"q": "Como você ordena os resultados de uma consulta SQL?", "options": ["ORDER BY", "SORT BY", "GROUP BY", "ARRANGE BY"], "a": "ORDER BY"},
        {"q": "O que faz a cláusula 'HAVING'?", "options": ["Filtra os grupos de dados após o GROUP BY", "Filtra os dados antes do GROUP BY", "Exclui dados de uma tabela", "Ordena os dados de uma consulta"], "a": "Filtra os grupos de dados após o GROUP BY"},
        {"q": "O que é uma chave estrangeira em SQL?", "options": ["Uma coluna que aponta para a chave primária de outra tabela", "Uma coluna que é única", "Uma coluna que permite valores nulos", "Uma coluna que não pode ser modificada"], "a": "Uma coluna que aponta para a chave primária de outra tabela"},
        {"q": "O que faz a função COUNT()?", "options": ["Conta o número de linhas", "Soma os valores de uma coluna", "Seleciona a média de uma coluna", "Ordena os dados"], "a": "Conta o número de linhas"},
        {"q": "O que faz a função SUM()?", "options": ["Soma os valores de uma coluna numérica", "Conta o número de linhas", "Seleciona a média de uma coluna", "Filtra os dados de acordo com uma condição"], "a": "Soma os valores de uma coluna numérica"},
        {"q": "Como você filtra os dados por um intervalo de valores?", "options": ["BETWEEN", "IN", "LIKE", "NULL"], "a": "BETWEEN"},
        {"q": "O que significa a cláusula 'DISTINCT'?", "options": ["Seleciona valores únicos", "Seleciona todas as linhas", "Ordena os dados", "Agrupa as colunas"], "a": "Seleciona valores únicos"},
        {"q": "O que faz a função AVG()?", "options": ["Calcula a média dos valores de uma coluna", "Conta o número de valores de uma coluna", "Soma os valores de uma coluna", "Ordena os valores de uma coluna"], "a": "Calcula a média dos valores de uma coluna"},
        {"q": "Como você seleciona todas as colunas de uma tabela?", "options": ["SELECT *", "SELECT ALL", "SELECT EVERY", "SELECT ALL COLUMNS"], "a": "SELECT *"},
        {"q": "O que faz o operador 'LIKE'?", "options": ["Filtra os resultados que correspondem a um padrão", "Seleciona valores únicos", "Verifica se um valor é nulo", "Ordena os dados"], "a": "Filtra os resultados que correspondem a um padrão"},
        {"q": "Como você combina dados de duas tabelas?", "options": ["JOIN", "UNION", "MERGE", "COMBINE"], "a": "JOIN"},
        {"q": "O que faz o operador 'AND'?", "options": ["Combina múltiplas condições de filtro", "Ordena os dados", "Seleciona valores únicos", "Agrupa os dados"], "a": "Combina múltiplas condições de filtro"},
        {"q": "Qual comando é utilizado para modificar o valor de uma coluna?", "options": ["UPDATE", "SET", "ALTER", "MODIFY"], "a": "UPDATE"},
        {"q": "Qual comando é utilizado para definir um valor padrão para uma coluna?", "options": ["ALTER COLUMN DEFAULT", "SET DEFAULT", "DEFAULT SET", "ADD DEFAULT"], "a": "ALTER COLUMN DEFAULT"},
        {"q": "O que significa o operador 'OR'?", "options": ["É usado para combinar múltiplas condições de filtro", "Ordena os dados", "Agrupa os dados", "Seleciona valores únicos"], "a": "É usado para combinar múltiplas condições de filtro"},
        {"q": "O que significa a cláusula 'NULL'?", "options": ["Representa um valor desconhecido ou ausente", "Representa um valor vazio", "Representa um valor zero", "Representa um valor booleano"], "a": "Representa um valor desconhecido ou ausente"},
        {"q": "O que faz a função CONCAT()?", "options": ["Concatena (une) strings", "Soma os valores de uma coluna", "Ordena os dados", "Agrupa os dados"], "a": "Concatena (une) strings"},
        {"q": "Como você renomeia uma tabela em SQL?", "options": ["ALTER TABLE nome_novo", "RENAME TABLE nome_novo", "UPDATE TABLE nome_novo", "CHANGE TABLE nome_novo"], "a": "ALTER TABLE nome_novo"},
        {"q": "Como você define um valor padrão para uma coluna em uma tabela existente?", "options": ["ALTER TABLE tabela MODIFY COLUMN nome_coluna SET DEFAULT valor", "ALTER TABLE tabela ADD DEFAULT valor", "ALTER COLUMN nome_coluna SET DEFAULT valor", "CREATE DEFAULT valor"], "a": "ALTER TABLE tabela MODIFY COLUMN nome_coluna SET DEFAULT valor"},
        {"q": "Como você seleciona dados de várias tabelas em SQL?", "options": ["Usando JOIN", "Usando UNION", "Usando SELECT", "Usando MERGE"], "a": "Usando JOIN"},
        {"q": "O que é uma subconsulta em SQL?", "options": ["Uma consulta dentro de outra consulta", "Uma consulta que seleciona todas as colunas", "Uma consulta que altera uma tabela", "Uma consulta que agrega dados"], "a": "Uma consulta dentro de outra consulta"},
        {"q": "O que faz o comando 'SELECT INTO'?", "options": ["Cria uma nova tabela com os dados selecionados", "Insere dados em uma tabela", "Modifica dados em uma tabela", "Ordena os dados"], "a": "Cria uma nova tabela com os dados selecionados"},
        {"q": "Como você limita a quantidade de resultados retornados em uma consulta SQL?", "options": ["LIMIT", "TOP", "FETCH", "OFFSET"], "a": "LIMIT"}
    ],    
    "TypeScript": [
        {"q": "O que é o TypeScript?", "options": ["Uma linguagem de programação que adiciona tipagem estática ao JavaScript", "Uma versão avançada de JavaScript", "Um framework de JavaScript", "Uma biblioteca de JavaScript"], "a": "Uma linguagem de programação que adiciona tipagem estática ao JavaScript"},
        {"q": "Qual é a principal vantagem de usar TypeScript em vez de JavaScript?", "options": ["Tipagem estática e verificação de erros em tempo de compilação", "Melhor performance de execução", "Mais suporte a frameworks", "Menor código"], "a": "Tipagem estática e verificação de erros em tempo de compilação"},
        {"q": "O que é um tipo em TypeScript?", "options": ["Uma definição de dados que pode ser atribuída a variáveis", "Um tipo de função", "Uma instrução de controle", "Um tipo de módulo"], "a": "Uma definição de dados que pode ser atribuída a variáveis"},
        {"q": "Como você define uma variável com tipo específico em TypeScript?", "options": ["let variavel: tipo", "var variavel tipo", "let tipo variavel", "var tipo: variavel"], "a": "let variavel: tipo"},
        {"q": "Qual é a extensão de um arquivo TypeScript?", "options": [".ts", ".js", ".jsx", ".tsx"], "a": ".ts"},
        {"q": "O que é um 'interface' em TypeScript?", "options": ["Uma forma de definir um contrato para objetos", "Um tipo de função", "Uma estrutura de controle", "Um tipo de dado primitivo"], "a": "Uma forma de definir um contrato para objetos"},
        {"q": "Qual é a palavra-chave usada para declarar uma classe em TypeScript?", "options": ["class", "function", "type", "interface"], "a": "class"},
        {"q": "O que é uma 'interface' opcional em TypeScript?", "options": ["Uma interface que pode ter propriedades ausentes", "Uma interface que define tipos dinâmicos", "Uma interface de herança", "Uma interface com propriedades de tipo desconhecido"], "a": "Uma interface que pode ter propriedades ausentes"},
        {"q": "Como você define um tipo de função em TypeScript?", "options": ["function nome(params: tipo): tipo", "def nome(params: tipo) -> tipo", "function nome(params) tipo", "func nome(params) -> tipo"], "a": "function nome(params: tipo): tipo"},
        {"q": "O que faz o 'any' tipo em TypeScript?", "options": ["Permite que a variável seja de qualquer tipo", "Impede a atribuição de valores nulos", "Representa um valor primitivo", "Define tipos numéricos"], "a": "Permite que a variável seja de qualquer tipo"},
        {"q": "Como você define um tipo para um array em TypeScript?", "options": ["let arr: tipo[]", "let arr[]: tipo", "arr: tipo[]", "tipo[] arr"], "a": "let arr: tipo[]"},
        {"q": "O que é uma 'tupla' em TypeScript?", "options": ["Uma lista de elementos com tipos específicos", "Um tipo de objeto", "Uma função que retorna vários valores", "Uma forma de herança"], "a": "Uma lista de elementos com tipos específicos"},
        {"q": "Como você define um tipo de objeto em TypeScript?", "options": ["let obj: {prop1: tipo, prop2: tipo}", "let obj = {prop1: tipo, prop2: tipo}", "let obj: tipo = {}", "let obj = {prop1: tipo, prop2: tipo}"], "a": "let obj: {prop1: tipo, prop2: tipo}"},
        {"q": "O que é 'union type' em TypeScript?", "options": ["Um tipo que pode ser um de vários tipos", "Um tipo de dados numérico", "Um tipo de função que aceita parâmetros diferentes", "Um tipo que nunca pode ser nulo"], "a": "Um tipo que pode ser um de vários tipos"},
        {"q": "Como você indica que uma variável pode ser nula em TypeScript?", "options": ["variavel: tipo | null", "variavel: tipo?", "variavel: null tipo", "variavel: tipo[]"], "a": "variavel: tipo | null"},
        {"q": "O que significa o operador '!' em TypeScript?", "options": ["Afirmar que a variável não é nula ou indefinida", "Inverter o valor lógico", "Operador de comparação", "Definir uma variável como obrigatória"], "a": "Afirmar que a variável não é nula ou indefinida"},
        {"q": "O que é o 'enum' em TypeScript?", "options": ["Um tipo de dado que representa um conjunto de valores nomeados", "Uma estrutura de repetição", "Uma interface de controle de fluxo", "Uma função que retorna um valor numerico"], "a": "Um tipo de dado que representa um conjunto de valores nomeados"},
        {"q": "Como você pode melhorar a verificação de tipos em TypeScript?", "options": ["Usando a palavra-chave 'as' para especificar o tipo", "Usando a palavra-chave 'check'", "Usando o tipo 'any'", "Usando a palavra-chave 'instanceof'"], "a": "Usando a palavra-chave 'as' para especificar o tipo"},
        {"q": "Qual é a principal diferença entre 'interface' e 'type' em TypeScript?", "options": ["Interface é para objetos e type é para tipos básicos e objetos", "Ambos são a mesma coisa", "Interface define um conjunto de valores e type define funções", "Type é apenas para variáveis do tipo string"], "a": "Interface é para objetos e type é para tipos básicos e objetos"},
        {"q": "Como você pode fazer um 'cast' de um tipo em TypeScript?", "options": ["Usando a palavra-chave 'as'", "Usando a palavra-chave 'cast'", "Usando a palavra-chave 'convert'", "Usando a palavra-chave 'change'"], "a": "Usando a palavra-chave 'as'"},
        {"q": "O que são 'decorators' em TypeScript?", "options": ["Funções que alteram ou adicionam comportamento a classes e métodos", "Funções que definem a tipagem", "Funções que declaram variáveis", "Funções que executam verificações de segurança"], "a": "Funções que alteram ou adicionam comportamento a classes e métodos"},
        {"q": "O que são 'generics' em TypeScript?", "options": ["Permitem que você defina tipos que funcionam para vários tipos de dados", "São tipos predefinidos", "São funções que gerenciam arrays", "São funções que implementam contratos"], "a": "Permitem que você defina tipos que funcionam para vários tipos de dados"},
        {"q": "Como você faz a declaração de um parâmetro opcional em TypeScript?", "options": ["param?: tipo", "param: tipo?", "param: tipo!", "param! tipo"], "a": "param?: tipo"},
        {"q": "Qual comando é utilizado para compilar um arquivo TypeScript?", "options": ["tsc arquivo.ts", "typescript arquivo.ts", "compile arquivo.ts", "tst arquivo.ts"], "a": "tsc arquivo.ts"},
        {"q": "O que significa o modificador 'readonly' em TypeScript?", "options": ["O valor de uma propriedade não pode ser alterado após a inicialização", "A propriedade deve ser obrigatória", "A propriedade pode ser modificada apenas uma vez", "A propriedade pode ser somente lida"], "a": "O valor de uma propriedade não pode ser alterado após a inicialização"},
        {"q": "Como você trata erros em TypeScript?", "options": ["Usando try...catch", "Usando if...else", "Usando o comando throw", "Usando do...while"], "a": "Usando try...catch"},
        {"q": "O que é o 'this' em TypeScript?", "options": ["Refere-se ao contexto atual de execução", "Uma variável global", "Um tipo de dado", "Uma função predefinida"], "a": "Refere-se ao contexto atual de execução"},
        {"q": "Qual é a principal característica das 'funções anônimas' em TypeScript?", "options": ["Elas não têm nome", "Elas são declaradas com 'function'", "Elas são apenas funções genéricas", "Elas não podem ser chamadas"], "a": "Elas não têm nome"},
        {"q": "O que são 'módulos' em TypeScript?", "options": ["Arquivos que exportam e importam funcionalidades", "Funções internas do sistema", "Tipo de dados primitivos", "Tipos de controle de fluxo"], "a": "Arquivos que exportam e importam funcionalidades"}
    ],
    "Visual Basic (VB.NET)": [
        {"q": "O que é o Visual Basic (VB.NET)?", "options": ["Uma linguagem de programação orientada a objetos desenvolvida pela Microsoft", "Um framework de desenvolvimento de aplicações", "Uma biblioteca de componentes gráficos", "Uma ferramenta de banco de dados"], "a": "Uma linguagem de programação orientada a objetos desenvolvida pela Microsoft"},
        {"q": "Qual é a principal característica do Visual Basic?", "options": ["Sintaxe simples e amigável", "Alta performance para computação de baixo nível", "Foco em sistemas embarcados", "Dependência de servidores externos"], "a": "Sintaxe simples e amigável"},
        {"q": "Qual é a extensão de um arquivo Visual Basic?", "options": [".vb", ".vbs", ".vbproj", ".vba"], "a": ".vb"},
        {"q": "O que significa a palavra-chave 'Dim' em Visual Basic?", "options": ["Declarar uma variável", "Definir uma classe", "Iniciar uma função", "Criar um módulo"], "a": "Declarar uma variável"},
        {"q": "Como você define uma função em Visual Basic?", "options": ["Function NomeDaFuncao() As Tipo", "Sub NomeDaFuncao() As Tipo", "Func NomeDaFuncao() As Tipo", "Function NomeDaFuncao() As Parametro"], "a": "Function NomeDaFuncao() As Tipo"},
        {"q": "Como você chama uma função em Visual Basic?", "options": ["NomeDaFuncao()", "Function NomeDaFuncao()", "Call NomeDaFuncao()", "Invoke NomeDaFuncao()"], "a": "NomeDaFuncao()"},
        {"q": "O que significa a palavra-chave 'Sub' em Visual Basic?", "options": ["Uma sub-rotina que não retorna valor", "Uma função que retorna valor", "Uma classe", "Uma variável constante"], "a": "Uma sub-rotina que não retorna valor"},
        {"q": "Como você cria uma classe em Visual Basic?", "options": ["Class NomeDaClasse", "Sub NomeDaClasse", "Function NomeDaClasse", "Module NomeDaClasse"], "a": "Class NomeDaClasse"},
        {"q": "O que é um 'Module' em Visual Basic?", "options": ["Um tipo especial de classe que contém procedimentos e funções", "Uma função de alto nível", "Uma variável global", "Um tipo de banco de dados"], "a": "Um tipo especial de classe que contém procedimentos e funções"},
        {"q": "Como você declara uma variável constante em Visual Basic?", "options": ["Const nome As tipo = valor", "Dim nome As tipo = valor", "Static nome As tipo = valor", "Let nome = valor"], "a": "Const nome As tipo = valor"},
        {"q": "Qual é a estrutura básica para um laço de repetição 'For' em Visual Basic?", "options": ["For i As Integer = 1 To 10", "For Each i In collection", "For i = 1 To 10", "While i < 10"], "a": "For i As Integer = 1 To 10"},
        {"q": "Como você manipula exceções em Visual Basic?", "options": ["Try...Catch", "If...Else", "On Error", "Catch...Finally"], "a": "Try...Catch"},
        {"q": "Qual é o tipo de dados que armazena números decimais em Visual Basic?", "options": ["Decimal", "Integer", "Double", "Single"], "a": "Decimal"},
        {"q": "O que é um 'Property' em Visual Basic?", "options": ["Um método de acesso a dados de uma classe", "Uma variável interna", "Uma função que retorna um valor", "Uma estrutura de dados complexa"], "a": "Um método de acesso a dados de uma classe"},
        {"q": "O que faz a palavra-chave 'Public' em Visual Basic?", "options": ["Torna um membro acessível de qualquer lugar", "Restringe o acesso ao membro", "Define um tipo de dado primitivo", "Define um membro de classe privado"], "a": "Torna um membro acessível de qualquer lugar"},
        {"q": "Como você cria um objeto em Visual Basic?", "options": ["Dim obj As New TipoClasse", "New TipoClasse As obj", "Dim obj As TipoClasse = New", "TipoClasse obj = New TipoClasse"], "a": "Dim obj As New TipoClasse"},
        {"q": "O que é um 'Array' em Visual Basic?", "options": ["Uma estrutura de dados que armazena múltiplos valores do mesmo tipo", "Uma variável única", "Uma classe de objetos", "Uma função"], "a": "Uma estrutura de dados que armazena múltiplos valores do mesmo tipo"},
        {"q": "Como você acessa um elemento de um array em Visual Basic?", "options": ["array(indice)", "array[indice]", "array{indice}", "array[indice]:tipo"], "a": "array(indice)"},
        {"q": "O que é um 'Delegate' em Visual Basic?", "options": ["Um tipo que refere a um método", "Uma classe que contém métodos", "Uma estrutura de dados", "Um tipo de variável constante"], "a": "Um tipo que refere a um método"},
        {"q": "Qual comando é usado para sair de um laço em Visual Basic?", "options": ["Exit", "Break", "Continue", "Stop"], "a": "Exit"},
        {"q": "Qual é a diferença entre 'ByVal' e 'ByRef' em Visual Basic?", "options": ["ByVal passa uma cópia do valor e ByRef passa a referência", "ByVal é mais rápido que ByRef", "ByVal é usado em variáveis globais", "ByRef é usado para funções"], "a": "ByVal passa uma cópia do valor e ByRef passa a referência"},
        {"q": "Como você converte uma string para número em Visual Basic?", "options": ["CInt()", "Convert.ToInt32()", "Val()", "Parse()"], "a": "CInt()"},
        {"q": "O que é o 'Option Explicit' em Visual Basic?", "options": ["Força a declaração de todas as variáveis", "Permite o uso de variáveis sem declaração", "Define a visibilidade das variáveis", "Faz a verificação de tipo de dados"], "a": "Força a declaração de todas as variáveis"},
        {"q": "Qual é a sintaxe correta para um laço 'Do While' em Visual Basic?", "options": ["Do While condição", "Do While (condição)", "While condição Do", "While condição"], "a": "Do While condição"},
        {"q": "Qual é a função para obter a hora atual em Visual Basic?", "options": ["Now", "GetDateTime()", "DateTime.Now", "Time.Now"], "a": "Now"},
        {"q": "O que faz a palavra-chave 'Static' em Visual Basic?", "options": ["Torna uma variável persistente entre chamadas de função", "Define uma função interna", "Torna uma variável pública", "Define uma variável de tipo estático"], "a": "Torna uma variável persistente entre chamadas de função"},
        {"q": "Como você define uma interface em Visual Basic?", "options": ["Interface NomeInterface", "Class NomeInterface", "Structure NomeInterface", "Module NomeInterface"], "a": "Interface NomeInterface"},
        {"q": "Qual é a palavra-chave utilizada para finalizar uma 'Sub' em Visual Basic?", "options": ["End Sub", "Exit Sub", "Return", "Finish Sub"], "a": "End Sub"},
        {"q": "O que significa a palavra-chave 'Me' em Visual Basic?", "options": ["Refere-se à instância atual da classe", "Refere-se a um tipo de variável", "Refere-se à classe base", "Refere-se a um método da classe"], "a": "Refere-se à instância atual da classe"},
        {"q": "Como você lida com eventos em Visual Basic?", "options": ["Usando a palavra-chave 'Handles'", "Com a palavra-chave 'Event'", "Usando a função 'AddHandler'", "Com a palavra-chave 'SubEvent'"], "a": "Usando a palavra-chave 'Handles'"},
        {"q": "O que é um 'Try...Finally' em Visual Basic?", "options": ["Uma estrutura de controle de exceções", "Uma função de manipulação de arrays", "Uma classe especial", "Um tipo de variável"], "a": "Uma estrutura de controle de exceções"},
        {"q": "Como você abre uma conexão com um banco de dados em Visual Basic?", "options": ["Using con As New SqlConnection", "New SqlConnection con", "Open SqlConnection", "Create con As SqlConnection"], "a": "Using con As New SqlConnection"}
    ]
    
    
    
    
    
    


}
